<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Board">

    <!-- 글 저장하기 -->
    <insert  id="BoardInsert" >
        insert into board
        (
        b_idx,
        title,
        cont,
        r_score,
        indate,
        b_count,
        menu_id,
        u_id,
        g_idx
        )
        values
        (
        ( select nvl(max(b_idx),0)+1 from board ),
        #{title},
        #{cont},
        #{r_score},
        sysdate,
        0,
        #{menu_id},
        #{u_id},
        #{g_idx}
        )
    </insert>

    <!-- 글 수정 -->
    <update  id="BoardUpdate">
        update board
        set   title   = #{title},
              cont    = #{cont},
              r_score = #{r_score}
        where b_idx   = #{b_idx}
    </update>

    <!-- 글 목록 카운트 -->
    <select id="BoardCount"
            resultType="int">
        SELECT COUNT(*)
        FROM BOARD
        where menu_id = ${menu_id}
    </select>

    <!-- 글 목록 불러오기 -->
    <select id="List"
            resultType="com.project.board.vo.BoardVo">
        <choose>
            <when test="menu_id == 3">
                SELECT *
                FROM board
                WHERE menu_id = #{menu_id}
                ORDER BY b_idx desc
            </when>
            <when test="g_idx != null">
                select *
                  from board
                 where g_idx = #{g_idx}
                   and menu_id = #{menu_id}
                 order by b_idx desc
            </when>
            <otherwise>
                select *
                from(
                select ROW_NUMBER() OVER (ORDER BY B_IDX ASC) RNUM,
                a.b_idx,
                a.title,
                a.cont,
                a.r_score,
                a.indate,
                a.b_count,
                a.menu_id,
                b.g_name,
                a.g_idx,
                a.u_id
                from  board a
                inner join gamelist b
                on a.g_idx = b.g_idx
                where menu_id = ${menu_id}
                order by b_idx asc)
                WHERE RNUM BETWEEN ${pageNum} and #{contentNum}
            </otherwise>
        </choose>
    </select>

    <!-- 글 불러오기 -->
    <select id="View"
            resultType="com.project.board.vo.BoardVo">
        select *
        from board
        where b_idx = #{b_idx}
    </select>

    <!-- 조회수 증가 -->
    <update  id="ReadCountUpdate">
        update board
        set  b_count = b_count + 1
        where b_idx = #{b_idx}
    </update>

    <!-- 글 삭제하기 -->
    <delete id="Delete">
        delete from board
        where b_idx = #{b_idx}
    </delete>

    <!-- 글 작성 여부 체크 -->
    <select id="BoardCheck"
            resultType="int">
        SELECT COUNT(*)
          FROM board
         WHERE    u_id = #{u_id}
           AND   g_idx = ${g_idx}
           AND menu_id = 1

    </select>

    <!-- 유저 고평가 게임 출력 -->
    <select id="GoodGame"
            resultType="com.project.board.vo.BoardVo">
        <![CDATA[
        SELECT  a.b_idx,
                a.title,
                a.cont,
                a.r_score,
                a.indate,
                a.b_count,
                a.menu_id,
                b.g_name,
                a.g_idx,
                a.u_id
          FROM(
            SELECT *
              FROM(
                SELECT *
                  FROM board
                 WHERE  u_id = 'hamo'
                   AND menu_id = 1
                   AND r_score >= 8
                   AND ROWNUM <= 10
                 ORDER BY r_score DESC
              )
            ORDER BY DBMS_RANDOM.RANDOM
          ) a
        INNER JOIN gamelist b
        ON a.g_idx = b.g_idx
        WHERE ROWNUM = 1
         ]]>
    </select>

</mapper>